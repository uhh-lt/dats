x-authentik-common: &authentik-common
  image: ${AUTHENTIK_IMAGE?authentik-image-required!}:${AUTHENTIK_TAG?authentik-tag-required!}
  restart: unless-stopped
  environment:
    AUTHENTIK_REDIS__HOST: auth-redis
    AUTHENTIK_POSTGRESQL__HOST: auth-postgres
    AUTHENTIK_POSTGRESQL__USER: ${AUTH_DB_USER?auth-db-user-required!}
    AUTHENTIK_POSTGRESQL__NAME: ${AUTH_DB?auth-db-required!}
    AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTH_DB_PASS?auth-db-pass-required!}
    AUTHENTIK_SECRET_KEY: ${AUTH_SECRET_KEY?auth-secret-key-required!}
  depends_on:
    auth-postgres:
      condition: service_healthy
    auth-redis:
      condition: service_healthy
  networks:
    - auth_network

services:
  auth-postgres:
    image: docker.io/library/postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${AUTH_DB_PASS?auto-db-pass-required!}
      POSTGRES_USER: ${AUTH_DB_USER?auto-db-user-required!}
      POSTGRES_DB: ${AUTH_DB?auto-db-required!}
    networks:
      - auth_network

  auth-redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - auth-redis-data:/data
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTH_SECRET_KEY?auth-secret-key-required!}
    networks:
      - auth_network

  auth-server:
    <<: *authentik-common
    command: server
    volumes:
      - ./authentik/media:/media
      - ./authentik/custom-templates:/templates
    ports:
      - "${AUTH_EXPOSED_HTTP?auth-exposed-http-required!}:9000"
      - "${AUTH_EXPOSED_HTTPS?auth-exposed-https-required!:-9443}:9443"

  auth-worker:
    <<: *authentik-common
    command: worker
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./authentik/media:/media
      - ./authentik/certs:/certs
      - ./authentik/custom-templates:/templates

volumes:
  auth-postgres-data:
    driver: local
  auth-redis-data:
    driver: local

networks:
  auth_network:
