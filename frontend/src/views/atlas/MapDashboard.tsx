import ReplyIcon from "@mui/icons-material/Reply";
import { Box, Button, Card, CardContent, CardMedia, Stack, Typography } from "@mui/material";
import { Link as RouterLink, useParams } from "react-router-dom";
import TopicModellingHooks from "../../api/TopicModellingHooks.ts";
import ContentContainerLayout from "../../layouts/ContentLayouts/ContentContainerLayout.tsx";
import BackgroundJobStatusBadge from "./BackgroundJobStatusBadge.tsx";
import TMJobProgressCard from "./TMJobProgressCard.tsx";

function MapDashboard() {
  const urlParams = useParams() as { projectId: string; aspectId: string };
  const projectId = parseInt(urlParams.projectId);
  const aspectId = parseInt(urlParams.aspectId);

  // global server state
  const aspect = TopicModellingHooks.useGetAspect(aspectId);
  const tmJob = TopicModellingHooks.usePollTMJob(aspect.data?.most_recent_job_id, undefined);

  console.log("projectId", projectId);

  return (
    <ContentContainerLayout>
      {aspect.data ? (
        <Stack spacing={4}>
          <Stack spacing={2} direction={"row"} alignItems="flex-start" justifyContent="space-between">
            <Box maxWidth="66%">
              <Stack direction={"row"} spacing={2} alignItems="center">
                <Typography variant="h5" color="primary">
                  {aspect.data.name}
                </Typography>
                <BackgroundJobStatusBadge status={tmJob.data?.status} />
              </Stack>
              <Typography pt={1}>
                This map is generated by computing document represenations with the following instruction:{" "}
                <i>{aspect.data.doc_embedding_prompt}</i>.{" "}
                {aspect.data.doc_modification_prompt ? (
                  <>
                    All the documents were modified with the following instruction:{" "}
                    <i>{aspect.data.doc_modification_prompt}</i>.
                  </>
                ) : (
                  "The documents were not modified. Their content was used as is."
                )}
              </Typography>
            </Box>
            <Button
              variant="contained"
              color="primary"
              endIcon={<ReplyIcon sx={{ transform: "rotate(90deg)" }} />}
              component={RouterLink}
              to={`../atlas/map/${aspectId}`}
            >
              Open Map
            </Button>
          </Stack>

          <Stack spacing={4} direction={"row"}>
            <Box width="400px">
              <Typography variant="button">Map</Typography>
              <Card>
                <CardMedia
                  sx={{ height: 350 }}
                  image="https://mui.com/static/images/cards/contemplative-reptile.jpg"
                  title="green iguana"
                />
                <CardContent sx={{ padding: 0.5, pb: "4px !important" }}>
                  <Typography variant="body2" sx={{ color: "text.secondary", textAlign: "center" }}>
                    This map is cool!
                  </Typography>
                </CardContent>
              </Card>
            </Box>
            <Box>
              <Typography variant="button">Data Statistics</Typography>
            </Box>
          </Stack>

          {tmJob.data && (
            <Box>
              <Typography variant="button">Most recent job</Typography>
              <TMJobProgressCard tmJob={tmJob.data} />
            </Box>
          )}
        </Stack>
      ) : (
        <>LOADING!</>
      )}
    </ContentContainerLayout>
  );
}

export default MapDashboard;
