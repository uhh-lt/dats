name: frontend checks
on:
  push:
    branches:
      - main
      - mwp_v1
  pull_request:
    paths:
      - ".github/**"
      - "docker/**"
      - "frontend/**"

jobs:
  frontend-checks:
    runs-on: self-hosted
    env:
      API_PRODUCTION_WORKERS: 1
      RAY_ENABLED: False
      OLLAMA_ENABLED: False
      VITE_APP_SERVER: http://localhost:13120
      COMPOSE_PROFILES: "background,backend,frontend"
    steps:
      - uses: actions/checkout@v3
      - name: Checkout PR
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr checkout ${{ github.event.pull_request.number }}
      - name: Check 0 - Build & Start Docker Containers
        working-directory: docker
        run: |
          ./setup-folders.sh
          chmod -R a+rwx backend_repo/ models_cache/ spacy_models/ numba_cache/ ollama_cache/
          cp .env.example .env
          sed -i 's/\(DATS_FRONTEND_DOCKER_VERSION=[0-9.]*\)/\1-test/' .env
          python monkey_patch_docker_compose.py --disable_ray --disable_ollama
          export GID=$(id -g)
          docker compose -f docker-compose-patched.yml --build frontend
          docker compose -f docker-compose-patched.yml up -d --quiet-pull
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Check 1 - api client is up-to-date
        working-directory: frontend
        run: |
          npm run update-api
          npm run generate-api
      - name: Add and commit changes
        uses: EndBug/add-and-commit@v9
        if: github.event_name == 'pull_request'
        with:
          add: "frontend/src/api"
          message: "Update OpenAPI spec and client"
          pathspec_error_handling: exitImmediately
          default_author: github_actions
