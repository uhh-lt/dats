name: importer end2end test
on:
  push:
    branches:
      - main
      - mwp_v1
  pull_request:
    paths:
      - "backend/**"
      - ".github/**"
      - "docker/**"
      - "tools/**"

jobs:
  importer-end2end-test:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false
      - name: Set Swap Space to 10GB
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - uses: actions/checkout@v3
      - name: Cache models
        id: cache-models
        uses: actions/cache@v3
        with:
          path: |
            docker/spacy_models
            docker/models_cache
            docker/numba_cache
          key: models-${{ hashFiles('backend/src/app/preprocessing/**') }}
      - name: Start Docker Containers
        working-directory: docker
        env:
          API_PRODUCTION_WORKERS: 1
          RAY_ENABLED: True
          OLLAMA_ENABLED: False
          COMPOSE_PROFILES: "backend,background,ray"
          RAY_CONFIG: "./config_test_no_gpu.yaml"
        run: |
          ./setup-folders.sh
          chmod -R a+rwx backend_repo/ models_cache/ spacy_models/ numba_cache/ ollama_cache/
          cp .env.example .env
          python monkey_patch_docker_compose_for_backend_tests.py --disable_ollama
          export GID=$(id -g)
          docker compose -f compose-test.yml up -d --quiet-pull
          while true; do echo Waiting for containers to start...; echo $(curl -s http://localhost:13120/healthcheck) | grep -q true && break; sleep 30; done ;
      - name: Run Import Data End-To-End Test
        working-directory: tools/importer
        env:
          TESTDATA_PASSWORD: ${{ secrets.TESTDATA_PASSWORD }}
        run: |
          pip install -r requirements.txt
          wget -q http://ltdata1.informatik.uni-hamburg.de/dwts/totalitarismo.zip
          unzip -q -P "$TESTDATA_PASSWORD" totalitarismo.zip
          python dats_importer.py --input_dir images --backend_url http://localhost:13120/ --project_name incel --tag_name totalitarisimo
          python dats_importer.py --input_dir json --backend_url http://localhost:13120/ --project_name incel --tag_name totalitarismo --is_json
