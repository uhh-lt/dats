name: Backend Unit Tests
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
      - mwp_v1
    paths:
      - "backend/**"
      - ".github/**"
  pull_request:
    branches:
      - main
      - mwp_v1

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: "Test scenario tags"
        required: false
        type: boolean
      environment:
        description: "Environment to run tests against"
        type: environment
        required: true

jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Log the inputs
        env:
          LEVEL: ${{ inputs.logLevel }}
          TAGS: ${{ inputs.tags }}
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          echo "Log level: $LEVEL"
          echo "Tags: $TAGS"
          echo "Environment: $ENVIRONMENT"
  run-unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false
      - name: Set Swap Space to 10GB
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10
      - uses: actions/checkout@v3
      - name: Start Docker Containers
        run: |
          cd docker
          ./setup-folders.sh
          cp .env.example .env
          chmod -R a+rwx backend_repo/ models_cache/ spacy_models/ tika/
          python monkey_patch_docker_compose_for_backend_tests.py
          export GID=$(id -g)
          export API_PRODUCTION_WORKERS=0
          export RAY_CONFIG="./config_test_no_gpu.yaml"
          docker compose -f compose-test.yml up -d --quiet-pull
          echo Waiting for containers to start...
          sleep 240
          cd ..
      - name: Run CRUD tests
        run: |
          docker exec -i demo-dwts-backend-api-1 /opt/envs/dwts/bin/python -m pytest
