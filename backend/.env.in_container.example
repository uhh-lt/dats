### Example file for running the backend inside a docker container
# Usually, for development environments, it's more convenient to run
# the backend outside of a container. For that, refer to `.env.example`.

# Which backend config file to use when running backend, celery or ray
DWISE_BACKEND_CONFIG=configs/default.yaml

# Authentication settings
JWT_TTL=10080
JWT_SECRET=f5b73acd6d6776350bce963bbcd2853fb5de00a4a4a081280ce1123b4a69aea9
JWT_ALGO=HS256

# Backend settings
LOG_LEVEL=debug
API_PORT=5500
API_PRODUCTION_MODE=0

# The system user is automatically created.
# It owns e.g. automatically created annotations.
SYSTEM_USER_FIRST_NAME=SYSTEM
SYSTEM_USER_LAST_NAME=USER
SYSTEM_USER_EMAIL="SYSTEM@DWTS.ORG"
SYSTEM_USER_PASSWORD="12SYSTEM34"

# Where to store uploaded files.
# Inside containers, use /tmp/dwts.
# Outside containers, set this to
# <path_to_dwts_repo>/docker/backend_repo
REPO_ROOT=/tmp/dwts

### Service configuration
# Tells the backend how to reach the various
# services it needs.
# Set _PORT values to their _EXPOSED counterparts
# if running outside a container,
# leave as-is otherwise.
CONTENT_SERVER_HOST=lighttpd
# TODO: This is used incorrectly in the backend config as the port
# of the content server.
CONTENT_SERVER_EXPOSED=13134

ES_HOST=elasticsearch
ES_PORT=9200

POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=dwts
POSTGRES_USER=dwtsuser
POSTGRES_PASSWORD=dwts123

RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_USER=dwtsuser
RABBITMQ_PASSWORD=dwts123

RAY_HOST=ray
RAY_PORT=8000
RAY_PROTOCOL=http

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=dwts123

WEAVIATE_HOST=weaviate
WEAVIATE_PORT=8080

# Mail sending configuration
MAIL_ENABLED=False
MAIL_FROM=dwise@uni-hamburg.de
MAIL_USERNAME=USER
MAIL_PASSWORD="PASS"
MAIL_SERVER=exchange.uni-hamburg.de
MAIL_PORT=587
MAIL_STARTTLS=True
MAIL_SSL_TLS=False
MAIL_USE_CREDENTIALS=True
MAIL_VALIDATE_CERTS=False
