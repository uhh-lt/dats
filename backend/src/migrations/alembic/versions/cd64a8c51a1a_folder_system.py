"""folder system

Revision ID: cd64a8c51a1a
Revises: 114328a16f17
Create Date: 2025-07-22 08:16:25.043609

"""

from typing import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cd64a8c51a1a"
down_revision: str | None = "114328a16f17"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # 1. Create folder table
    op.create_table(
        "folder",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "folder_type",
            sa.Enum("NORMAL", "SDOC_FOLDER", name="foldertype"),
            nullable=False,
        ),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["folder.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "parent_id", "name", name="UC_unique_folder_name_in_parent"
        ),
    )
    op.create_index(op.f("ix_folder_created"), "folder", ["created"], unique=False)
    op.create_index(
        op.f("ix_folder_folder_type"), "folder", ["folder_type"], unique=False
    )
    op.create_index(op.f("ix_folder_id"), "folder", ["id"], unique=False)
    op.create_index(op.f("ix_folder_name"), "folder", ["name"], unique=False)
    op.create_index(op.f("ix_folder_parent_id"), "folder", ["parent_id"], unique=False)
    op.create_index(
        op.f("ix_folder_project_id"), "folder", ["project_id"], unique=False
    )
    op.create_index(op.f("ix_code_parent_id"), "code", ["parent_id"], unique=False)
    op.create_index(
        op.f("ix_documenttag_parent_id"), "documenttag", ["parent_id"], unique=False
    )

    # 2. Add folder_id column to sourcedocument as nullable
    op.add_column("sourcedocument", sa.Column("folder_id", sa.Integer(), nullable=True))
    op.create_index(
        op.f("ix_sourcedocument_folder_id"),
        "sourcedocument",
        ["folder_id"],
        unique=False,
    )

    # 3. Batch-wise folder creation and assignment with logging
    conn = op.get_bind()
    project_ids = [
        row[0] for row in conn.execute(sa.text("SELECT id FROM project")).fetchall()
    ]
    print(f"Need to create folders for {len(project_ids)} projects")
    for project_id in project_ids:
        # Create folders for source documents in this project
        created_count = conn.execute(
            sa.text(
                """
            INSERT INTO folder (name, folder_type, created, updated, project_id)
            SELECT filename, 'SDOC_FOLDER', now(), now(), project_id FROM sourcedocument WHERE project_id = :project_id
            """
            ),
            {"project_id": project_id},
        ).rowcount
        # Assign folder_id to sourcedocument
        assigned_count = conn.execute(
            sa.text(
                """
            UPDATE sourcedocument SET folder_id = folder.id
            FROM folder
            WHERE sourcedocument.project_id = :project_id AND folder.project_id = :project_id AND folder.name = sourcedocument.filename
            """
            ),
            {"project_id": project_id},
        ).rowcount
        print(
            f"Project {project_id}: successfully created '{created_count}' and assigned '{assigned_count}' folders."
        )

    # 4. Make folder_id non-nullable
    op.alter_column("sourcedocument", "folder_id", nullable=False)

    # 5. Add FK constraint
    op.create_foreign_key(
        "fk_sourcedocument_folder_id",
        "sourcedocument",
        "folder",
        ["folder_id"],
        ["id"],
        ondelete="CASCADE",
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_sourcedocument_folder_id", "sourcedocument", type_="foreignkey"
    )
    op.drop_index(op.f("ix_sourcedocument_folder_id"), table_name="sourcedocument")
    op.drop_column("sourcedocument", "folder_id")
    op.drop_index(op.f("ix_documenttag_parent_id"), table_name="documenttag")
    op.drop_index(op.f("ix_code_parent_id"), table_name="code")
    op.drop_index(op.f("ix_folder_project_id"), table_name="folder")
    op.drop_index(op.f("ix_folder_parent_id"), table_name="folder")
    op.drop_index(op.f("ix_folder_name"), table_name="folder")
    op.drop_index(op.f("ix_folder_id"), table_name="folder")
    op.drop_index(op.f("ix_folder_folder_type"), table_name="folder")
    op.drop_index(op.f("ix_folder_created"), table_name="folder")
    op.drop_table("folder")
    # ### end Alembic commands ###
