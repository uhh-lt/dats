from datetime import datetime

from pydantic import BaseModel, ConfigDict, Field

from app.core.data.dto.dto_base import UpdateDTOBase

##########################
# TopicInterpretation DTOs
##########################


class TopicInterpretationBase(BaseModel):
    topic_info_id: int = Field(
        description="TopicInfo the TopicInterpretation belongs to"
    )
    prompt_name: str = Field(description="Name of the prompt used for LLM")
    topic_name: str = Field(description="Name of the Topic generated by LLM")
    reasoning: str = Field(
        description="Reasoning as to why the LLM decided for this Topic Name"
    )


class TopicInterpretationCreate(TopicInterpretationBase):
    pass


class TopicInterpretationUpdate(TopicInterpretationBase, UpdateDTOBase):
    pass


class TopicInterpretationRead(TopicInterpretationBase):
    id: int = Field(description="ID of the TopicInfo")
    created: datetime = Field(description="Created timestamp of the TopicInfo")
    updated: datetime = Field(description="Updated timestamp of the TopicInfo")

    model_config = ConfigDict(from_attributes=True)

    def __str__(self) -> str:
        return f"TopicInfoRead(id={self.id}, prompt_name={self.prompt_name}, topic_name={self.topic_name}, reasoning={self.reasoning})"

    def __repr__(self) -> str:
        return str(self)
