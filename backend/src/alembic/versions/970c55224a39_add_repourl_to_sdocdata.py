"""add repo_url to sdocdata

Revision ID: 970c55224a39
Revises: 4eb64db5a67a
Create Date: 2025-01-13 10:21:43.457535

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.orm import sessionmaker
from sqlalchemy.sql import text

from alembic import op
from app.core.data.crud.source_document import crud_sdoc
from app.core.data.doc_type import DocType
from app.core.data.dto.source_document import SourceDocumentRead
from app.core.data.repo.repo_service import RepoService

# revision identifiers, used by Alembic.
revision: str = "970c55224a39"
down_revision: Union[str, None] = "4eb64db5a67a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # add the column, non-nullable
    op.add_column(
        "sourcedocumentdata", sa.Column("repo_url", sa.String(), nullable=True)
    )

    conn = op.get_bind()

    # 1. Read all existing project ids
    projects = conn.execute(sa.text("SELECT id FROM project")).fetchall()
    print("Found projects:", len(projects))

    # 2. Read all existing Source Documents
    db = sessionmaker(bind=conn)()
    for row in projects:
        proj_id = row.id
        print("Processing project:", proj_id)

        sdocs = crud_sdoc.read_by_project(db=db, proj_id=proj_id, only_finished=False)  # type: ignore

        # 3. Use the repo service to get the URL of the Source Document
        urls = []
        for sdoc in sdocs:
            try:
                url = RepoService().get_sdoc_url(
                    sdoc=SourceDocumentRead.model_validate(sdoc),
                    relative=True,
                    webp=sdoc.doctype == DocType.image,
                    thumbnail=False,
                )
            except Exception as e:
                print(
                    f"Error getting URL for project {sdoc.project_id} sdoc {sdoc.id}: {e}"
                )
                url = ""
            urls.append(url)

        # 4. Update the repo_url field in the Source Document Data table
        for sdoc, url in zip(sdocs, urls):
            conn.execute(
                text("UPDATE sourcedocumentdata SET repo_url = :url WHERE id = :id"),
                {"url": url, "id": sdoc.id},
            )

    # change the column to non-nullable
    op.alter_column("sourcedocumentdata", "repo_url", nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("sourcedocumentdata", "repo_url")
    # ### end Alembic commands ###
