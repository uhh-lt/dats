"""add perspectives tables (aspect, cluster, documentaspect, documentcluster)

Revision ID: 114328a16f17
Revises: 42c759c92f5b
Create Date: 2025-07-03 14:29:46.966812

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "114328a16f17"
down_revision: Union[str, None] = "42c759c92f5b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "aspect",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("doc_embedding_prompt", sa.Text(), nullable=False),
        sa.Column("doc_modification_prompt", sa.Text(), nullable=True),
        sa.Column("is_hierarchical", sa.Boolean(), nullable=False),
        sa.Column("most_recent_job_id", sa.String(), nullable=True),
        sa.Column(
            "embedding_model", sa.String(), server_default="default", nullable=False
        ),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_aspect_id"), "aspect", ["id"], unique=False)
    op.create_index(
        op.f("ix_aspect_project_id"), "aspect", ["project_id"], unique=False
    )
    op.create_table(
        "cluster",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("is_outlier", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("top_words", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("top_word_scores", sa.ARRAY(sa.Float()), nullable=True),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("top_docs", sa.ARRAY(sa.Integer()), nullable=True),
        sa.Column("x", sa.Float(), nullable=True),
        sa.Column("y", sa.Float(), nullable=True),
        sa.Column("parent_cluster_id", sa.Integer(), nullable=True),
        sa.Column("aspect_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["aspect_id"], ["aspect.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["parent_cluster_id"], ["cluster.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cluster_aspect_id"), "cluster", ["aspect_id"], unique=False
    )
    op.create_index(op.f("ix_cluster_id"), "cluster", ["id"], unique=False)
    op.create_index(
        op.f("ix_cluster_parent_cluster_id"),
        "cluster",
        ["parent_cluster_id"],
        unique=False,
    )
    op.create_table(
        "documentaspect",
        sa.Column("sdoc_id", sa.Integer(), nullable=False),
        sa.Column("aspect_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("x", sa.Float(), nullable=True),
        sa.Column("y", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["aspect_id"], ["aspect.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["sdoc_id"], ["sourcedocument.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("sdoc_id", "aspect_id"),
    )
    op.create_index(
        op.f("ix_documentaspect_aspect_id"),
        "documentaspect",
        ["aspect_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_documentaspect_sdoc_id"), "documentaspect", ["sdoc_id"], unique=False
    )
    op.create_table(
        "documentcluster",
        sa.Column("sdoc_id", sa.Integer(), nullable=False),
        sa.Column("cluster_id", sa.Integer(), nullable=False),
        sa.Column("distance", sa.Float(), nullable=True),
        sa.Column("is_accepted", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["cluster_id"], ["cluster.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["sdoc_id"], ["sourcedocument.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("sdoc_id", "cluster_id"),
    )
    op.create_index(
        op.f("ix_documentcluster_cluster_id"),
        "documentcluster",
        ["cluster_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_documentcluster_sdoc_id"), "documentcluster", ["sdoc_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_documentcluster_sdoc_id"), table_name="documentcluster")
    op.drop_index(op.f("ix_documentcluster_cluster_id"), table_name="documentcluster")
    op.drop_table("documentcluster")
    op.drop_index(op.f("ix_documentaspect_sdoc_id"), table_name="documentaspect")
    op.drop_index(op.f("ix_documentaspect_aspect_id"), table_name="documentaspect")
    op.drop_table("documentaspect")
    op.drop_index(op.f("ix_cluster_parent_cluster_id"), table_name="cluster")
    op.drop_index(op.f("ix_cluster_id"), table_name="cluster")
    op.drop_index(op.f("ix_cluster_aspect_id"), table_name="cluster")
    op.drop_table("cluster")
    op.drop_index(op.f("ix_aspect_project_id"), table_name="aspect")
    op.drop_index(op.f("ix_aspect_id"), table_name="aspect")
    op.drop_table("aspect")
    # ### end Alembic commands ###
