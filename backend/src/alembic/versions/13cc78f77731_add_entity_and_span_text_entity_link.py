"""add entity and span text entity link

Revision ID: 13cc78f77731
Revises: 2b91203d1bb6
Create Date: 2024-06-27 16:05:14.589423

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "13cc78f77731"
down_revision: Union[str, None] = "2b91203d1bb6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "entity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column(
            "updated", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("is_human", sa.Boolean(), nullable=False),
        sa.Column("knowledge_base_id", sa.String(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_entity_created"), "entity", ["created"], unique=False)
    op.create_index(op.f("ix_entity_id"), "entity", ["id"], unique=False)
    op.create_index(op.f("ix_entity_is_human"), "entity", ["is_human"], unique=False)
    op.create_index(
        op.f("ix_entity_knowledge_base_id"),
        "entity",
        ["knowledge_base_id"],
        unique=False,
    )
    op.create_index(op.f("ix_entity_name"), "entity", ["name"], unique=False)
    op.create_index(
        op.f("ix_entity_project_id"), "entity", ["project_id"], unique=False
    )
    op.create_table(
        "spantextentitylink",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("linked_entity_id", sa.Integer(), nullable=True),
        sa.Column("linked_span_text_id", sa.Integer(), nullable=True),
        sa.Column("is_human", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["linked_entity_id"], ["entity.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["linked_span_text_id"], ["spantext.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_spantextentitylink_id"), "spantextentitylink", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_spantextentitylink_is_human"),
        "spantextentitylink",
        ["is_human"],
        unique=False,
    )
    op.create_index(
        op.f("ix_spantextentitylink_linked_entity_id"),
        "spantextentitylink",
        ["linked_entity_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_spantextentitylink_linked_span_text_id"),
        "spantextentitylink",
        ["linked_span_text_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_spantextentitylink_linked_span_text_id"),
        table_name="spantextentitylink",
    )
    op.drop_index(
        op.f("ix_spantextentitylink_linked_entity_id"), table_name="spantextentitylink"
    )
    op.drop_index(
        op.f("ix_spantextentitylink_is_human"), table_name="spantextentitylink"
    )
    op.drop_index(op.f("ix_spantextentitylink_id"), table_name="spantextentitylink")
    op.drop_table("spantextentitylink")
    op.drop_index(op.f("ix_entity_project_id"), table_name="entity")
    op.drop_index(op.f("ix_entity_name"), table_name="entity")
    op.drop_index(op.f("ix_entity_knowledge_base_id"), table_name="entity")
    op.drop_index(op.f("ix_entity_is_human"), table_name="entity")
    op.drop_index(op.f("ix_entity_id"), table_name="entity")
    op.drop_index(op.f("ix_entity_created"), table_name="entity")
    op.drop_table("entity")
    # ### end Alembic commands ###
