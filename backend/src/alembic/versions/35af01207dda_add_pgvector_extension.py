"""add pgvector extension

Revision ID: 35af01207dda
Revises: 42c759c92f5b
Create Date: 2025-05-20 08:27:37.372579

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "35af01207dda"
down_revision: Union[str, None] = "42c759c92f5b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()

    # Create pgvector extension
    connection.execute(sa.text("CREATE EXTENSION IF NOT EXISTS vector"))

    # Verify extension was installed successfully
    result = connection.execute(
        sa.text("SELECT extname FROM pg_extension WHERE extname = 'vector'")
    ).scalar()
    if result == "vector":
        print("INFO: Successfully added pgvector extension")
    else:
        print("WARNING: Failed to add pgvector extension")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()

    # Drop pgvector extension
    connection.execute(sa.text("DROP EXTENSION IF EXISTS vector"))

    # Verify extension was removed successfully
    result = connection.execute(
        sa.text("SELECT extname FROM pg_extension WHERE extname = 'vector'")
    ).scalar()
    if result is None:
        print("INFO: Successfully removed pgvector extension")
    else:
        print("WARNING: Failed to remove pgvector extension")
    # ### end Alembic commands ###
