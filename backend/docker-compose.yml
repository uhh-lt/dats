version: "3.3"

services:
  postgres:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
    ports:
      - "${POSTGRES_EXPOSED:-5432}:5432"
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    networks:
      - dwts_backend_network

  rabbitmq:
    image: "rabbitmq:management"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-dwts123}
    ports:
      - "${RABBIT1_EXPOSED:-4369}:4369"
      - "${RABBIT2_EXPOSED:-5672}:5672"
      - "${RABBIT3_EXPOSED:-25672}:25672"
      - "${RABBIT_EXPOSED:-15672}:15672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq/data"
    networks:
      - dwts_backend_network

  redis:
    image: "redis:latest"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
    ports:
      - "${REDIS_EXPOSED:-6379}:6379"
    volumes:
      - "redis_data:/var/lib/redis/data"
    command: redis-server --requirepass "${REDIS_PASSWORD:-dwts123}"
    networks:
      - dwts_backend_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
      # use 127.0.0.1 to access the ES node from OUTSIDE of the docker network (e.g. when ssh tunneling to ltdocker)
      # network.publish_host=127.0.0.1
      # http.publish_port=${ELASTICSEARCH_EXPOSED_PORT:-9200}
      - xpack.security.enabled=false # no auth
      - discovery.type=single-node # single node cluster
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_EXPOSED:-9200}:9200"
      - "${ELASTICSEARCH1_EXPOSED:-9300}:9300"
    networks:
      - dwts_backend_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.3
    ports:
      - "${KIBANA_EXPOSED:-5601}:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - dwts_backend_network
    depends_on:
      - elasticsearch

  #  celery-flower:
  #    image: gregsi/latest-celery-flower-docker:latest
  #    environment:
  #      AMQP_USERNAME: ${RABBITMQ_USER:-dwtsuser}
  #      AMQP_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
  #      AMQP_ADMIN_USERNAME: ${RABBITMQ_USER:-dwtsuser}
  #      AMQP_ADMIN_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
  #      AMQP_HOST: ${RABBITMQ_HOST:-rabbitmq}
  #      AMQP_PORT: ${RABBITMQ_PORT:-5672}
  #      AMQP_ADMIN_HOST: ${RABBITMQ_HOST:-rabbitmq}
  #      AMQP_ADMIN_PORT: ${RABBITMQ_PORT:-15672}
  #      FLOWER_BASIC_AUTH: ${FLOWER_BASIC_AUTH:-dwtsuser:dwts123}
  #    ports:
  #      - "5555:5555"
  #    depends_on:
  #      - rabbitmq
  #      - redis
  #    networks:
  #      - dwts_backend_network

  lighttpd:
    image: sebp/lighttpd
    volumes:
      - ./backend_repo:/var/www/localhost/htdocs
    ports:
      - "${CONTENT_SERVER_EXPOSED:-12345}:80"
    tty: true
    networks:
      - dwts_backend_network

  celery-text-worker:
    image: uhhlt/dwts_backend_celery_text:${DWTS_BACKEND_DOCKER_VERSION:-debian_dev_latest}
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-dwts}
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
      ES_HOST: ${ES_HOST:-elasticsearch}
      ES_PORT: ${ES_PORT:-9200}
      ES_MIN_HEALTH: ${ES_MIN_HEALTH:-75}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      INSTALL_JUPYTER: ${INSTALL_JUPYTER:-false}
      API_PORT: ${API_PORT:-5500}
      CELERY_TEXT_WORKER_CONCURRENCY: ${CELERY_TEXT_WORKER_CONCURRENCY:-1}
      DWISE_BACKEND_CONFIG: ${DWISE_BACKEND_CONFIG:-/dwts_code/src/configs/default.yaml}
      HUGGINGFACE_HUB_CACHE: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      TORCH_HOME: /models_cache
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - ./src:/dwts_code/src
      - ./backend_repo:/tmp/dwts
      - ./spacy_models:/spacy_models
      - ./models_cache:/models_cache
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - "${JUPYTER_TEXT_EXPOSED:-8889}:8888"
    restart: always
    links:
      - postgres
      - redis
      - rabbitmq
      - elasticsearch
    networks:
      - dwts_backend_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]

  celery-image-worker:
    image: uhhlt/dwts_backend_celery_image:${DWTS_BACKEND_DOCKER_VERSION:-debian_dev_latest}
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-dwts}
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
      ES_HOST: ${ES_HOST:-elasticsearch}
      ES_PORT: ${ES_PORT:-9200}
      ES_MIN_HEALTH: ${ES_MIN_HEALTH:-75}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      INSTALL_JUPYTER: ${INSTALL_JUPYTER:-false}
      API_PORT: ${API_PORT:-5500}
      CELERY_IMAGE_WORKER_CONCURRENCY: ${CELERY_IMAGE_WORKER_CONCURRENCY:-1}
      DWISE_BACKEND_CONFIG: ${DWISE_BACKEND_CONFIG:-/dwts_code/src/configs/default.yaml}
      HUGGINGFACE_HUB_CACHE: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      TORCH_HOME: /models_cache
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - ./src:/dwts_code/src
      - ./backend_repo:/tmp/dwts
      - ./models_cache:/models_cache
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - "${JUPYTER_IMAGE_EXPOSED:-8880}:8888"
    restart: always
    links:
      - postgres
      - redis
      - rabbitmq
    networks:
      - dwts_backend_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]

  celery-archive-worker:
    image: uhhlt/dwts_backend_celery_archive:${DWTS_BACKEND_DOCKER_VERSION:-debian_dev_latest}
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-dwts}
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
      ES_HOST: ${ES_HOST:-elasticsearch}
      ES_PORT: ${ES_PORT:-9200}
      ES_MIN_HEALTH: ${ES_MIN_HEALTH:-75}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      INSTALL_JUPYTER: ${INSTALL_JUPYTER:-false}
      API_PORT: ${API_PORT:-5500}
      CELERY_ARCHIVE_WORKER_CONCURRENCY: ${CELERY_ARCHIVE_WORKER_CONCURRENCY:-1}
      DWISE_BACKEND_CONFIG: ${DWISE_BACKEND_CONFIG:-/dwts_code/src/configs/default.yaml}
      HUGGINGFACE_HUB_CACHE: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      TORCH_HOME: /models_cache
    volumes:
      - ./src:/dwts_code/src
      - ./backend_repo:/tmp/dwts
      - ./models_cache:/models_cache
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - "${JUPYTER_ARCHIVE_EXPOSED:-8880}:8888"
    restart: always
    links:
      - postgres
      - redis
      - rabbitmq
    networks:
      - dwts_backend_network

  celery-simsearch-worker:
    image: uhhlt/dwts_backend_celery_simsearch:${DWTS_BACKEND_DOCKER_VERSION:-debian_dev_latest}
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-dwts}
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
      ES_HOST: ${ES_HOST:-elasticsearch}
      ES_PORT: ${ES_PORT:-9200}
      ES_MIN_HEALTH: ${ES_MIN_HEALTH:-75}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      INSTALL_JUPYTER: ${INSTALL_JUPYTER:-false}
      API_PORT: ${API_PORT:-5500}
      CELERY_SIMSEARCH_WORKER_CONCURRENCY: ${CELERY_SIMSEARCH_WORKER_CONCURRENCY:-1}
      DWISE_BACKEND_CONFIG: ${DWISE_BACKEND_CONFIG:-/dwts_code/src/configs/default.yaml}
      HUGGINGFACE_HUB_CACHE: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      TORCH_HOME: /models_cache
      NVIDIA_DRIVER_CAPABILITIES: all
      NVIDIA_VISIBLE_DEVICES: all
    volumes:
      - ./src:/dwts_code/src
      - ./backend_repo:/tmp/dwts
      - ./models_cache:/models_cache
    depends_on:
      - rabbitmq
      - redis
      - postgres
    ports:
      - "${JUPYTER_SIMSEARCH_EXPOSED:-8880}:8888"
    restart: always
    links:
      - postgres
      - redis
      - rabbitmq
    networks:
      - dwts_backend_network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]

  dwts-backend-api:
    image: uhhlt/dwts_backend_api:${DWTS_BACKEND_DOCKER_VERSION:-debian_dev_latest}
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dwts123}
      RABBITMQ_HOST: ${RABBITMQ_HOST:-rabbitmq}
      RABBITMQ_PORT: ${RABBITMQ_PORT:-5672}
      RABBITMQ_USER: ${RABBITMQ_USER:-dwtsuser}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-dwts123}
      POSTGRES_HOST: ${POSTGRES_HOST:-postgres}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-dwts}
      POSTGRES_USER: ${POSTGRES_USER:-dwtsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dwts123}
      ES_HOST: ${ES_HOST:-elasticsearch}
      ES_PORT: ${ES_PORT:-9200}
      ES_MIN_HEALTH: ${ES_MIN_HEALTH:-75}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      INSTALL_JUPYTER: ${INSTALL_JUPYTER:-false}
      API_PORT: ${API_PORT:-5000}
      CONTENT_SERVER_EXPOSED: ${CONTENT_SERVER_EXPOSED:-12345}
      JWT_TTL: ${JWT_TTL:-10080} # 10080 secs == 1 week
      JWT_SECRET: ${JWT_SECRET:-""}
      DWISE_BACKEND_CONFIG: ${DWISE_BACKEND_CONFIG:-/dwts_code/src/configs/default.yaml}
      API_PRODUCTION_MODE: ${API_PRODUCTION_MODE:-0}
      API_PRODUCTION_WORKERS: ${API_PRODUCTION_WORKERS:-10}
      HUGGINGFACE_HUB_CACHE: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      TORCH_HOME: /models_cache
    volumes:
      - ./src:/dwts_code/src
      - ./backend_repo:/tmp/dwts
      - ./models_cache:/models_cache
    depends_on:
      - elasticsearch
      - kibana
      - lighttpd
      - postgres
      - rabbitmq
      - redis
      - celery-text-worker
      - celery-image-worker
    ports:
      - "${API_EXPOSED:-5000}:${API_PORT}"
      - "${JUPYTER_API_EXPOSED:-8888}:8888"
    restart: always
    links:
      - postgres
      - redis
      - rabbitmq
      - celery-text-worker
      - celery-image-worker
      - celery-archive-worker
      - elasticsearch
    networks:
      - dwts_backend_network

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  elasticsearch_data:
    driver: local

networks:
  dwts_backend_network:
