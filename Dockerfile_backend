FROM python:3.9.7 as dev_build
MAINTAINER Florian Schneider florian.schneider-1@uni-hamburg.de

ARG DWTS_ENV

ENV DWTS_ENV=${DWTS_ENV} \
  # python:
  PYTHONFAULTHANDLER=1 \
  PYTHONUNBUFFERED=1 \
  PYTHONHASHSEED=random \
  PYTHONDONTWRITEBYTECODE=1 \
  # pip:
  PIP_NO_CACHE_DIR=off \
  PIP_DISABLE_PIP_VERSION_CHECK=on \
  PIP_DEFAULT_TIMEOUT=100 \
  # poetry:
  POETRY_VERSION=1.1.11 \
  POETRY_NO_INTERACTION=1 \
  POETRY_VIRTUALENVS_CREATE=false \
  POETRY_CACHE_DIR='/var/cache/pypoetry' \
  PATH="$PATH:/root/.local/bin"

# System deps:
RUN apt-get update && apt-get upgrade -y \
      && apt-get install --no-install-recommends -y \
        bash \
        build-essential \
        curl \
        gettext \
        git \
        libpq-dev \
        wget \
        # Installing `poetry` package manager:
      # https://github.com/python-poetry/poetry
      && curl -sSL 'https://install.python-poetry.org' | python - \
      && poetry --version \
        # Install rust
      && curl https://sh.rustup.rs -sSf | bash -s -- -y \
      && echo 'source $HOME/.cargo/env' >> $HOME/.bashrc


WORKDIR /dwts_code

# Copy only requirements, to cache them in docker layer
COPY ./poetry.lock ./pyproject.toml /dwts_code/

# RUN echo ${PWD} && ls -lah

# Project initialization:
RUN echo "$DWTS_ENV" && poetry version \
  && poetry install --no-interaction --no-ansi \
  # Upgrading pip, it is insecure, remove after `pip@21.1`
  && poetry run pip install -U pip

WORKDIR /dwts_code/src


FROM dev_build as prod_build
COPY . /dwts_code

ENTRYPOINT ["python", "main.py"]

